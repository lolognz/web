{"version":3,"sources":["logo.svg","js/javascript.js","components/TopBar.js","components/Header.js","components/About.js","components/Resume.js","components/Projects.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","onscroll","document","body","scrollTop","documentElement","getElementById","style","display","top","windowheight","sectionabout","offsetTop","backgroundColor","TopBar","class","id","onclick","type","data-toggle","data-target","href","React","Component","Header","HeaderData","name","text","text2","text3","target","rel","About","Resume","Projects","Footer","App","className","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2IAAAA,EAAOC,QAAU,IAA0B,kC,2DCI3CC,OAAOC,SAAW,WACVC,SAASC,KAAKC,UAAY,IAAMF,SAASG,gBAAgBD,UAAY,IACrEF,SAASI,eAAe,SAASC,MAAMC,QAAU,QACjDN,SAASI,eAAe,UAAUC,MAAME,IAAM,MAE9CP,SAASI,eAAe,SAASC,MAAMC,QAAU,OACjDN,SAASI,eAAe,UAAUC,MAAME,IAAM,SAGlD,IAAIC,EAAeV,OAAOI,UACtBO,EAAeT,SAASI,eAAe,iBAAiBM,UAGxDV,SAASI,eAAe,UAAUC,MAAMM,gBADxCH,GAAgBC,EAC0C,OAEA,gB,mICenDG,G,uLA7BX,OAAO,yBAAKC,MAAM,uCAAuCC,GAAG,UAGxD,4BAAQD,MAAM,MAAME,QAAQ,gBAAgBD,GAAG,SAC9C,uBAAGD,MAAM,gCAGV,4BAAQA,MAAM,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,cAAY,sBAC5E,0BAAML,MAAM,yBAIhB,yBAAKA,MAAM,kDAAkDC,GAAG,qBAC5D,wBAAID,MAAM,cACN,wBAAIA,MAAM,YACN,uBAAGA,MAAM,WAAWM,KAAK,mBAAzB,SAEJ,wBAAIN,MAAM,YACN,uBAAGA,MAAM,WAAWM,KAAK,kBAAzB,SAEJ,wBAAIN,MAAM,YACN,uBAAGA,MAAM,WAAWM,KAAK,mBAAzB,gB,GAvBCC,IAAMC,Y,OCmBZC,E,iLAjBX,OAAO,6BAAST,MAAM,QAAQC,GAAG,kBAC7B,yBAAKD,MAAM,kBACP,yBAAKA,MAAM,aACP,wBAAIC,GAAG,eAAeS,EAAWC,MACjC,uBAAGV,GAAG,eAAeS,EAAWE,KAAK,2BAAIF,EAAWG,OAAWH,EAAWI,OAC1E,wBAAId,MAAM,gBACN,4BAAI,uBAAGM,KAAK,8CAA8CS,OAAO,SAASC,IAAI,uBAAsB,uBAAGhB,MAAM,qBAC7G,4BAAI,uBAAGM,KAAK,oEAAoES,OAAO,SAASC,IAAI,uBAAsB,uBAAGhB,MAAM,2BACnI,4BAAI,uBAAGM,KAAK,6BAA6BS,OAAO,SAASC,IAAI,uBAAsB,uBAAGhB,MAAM,mBAC5F,4BAAI,uBAAGM,KAAK,8BAA8BS,OAAO,SAASC,IAAI,uBAAsB,uBAAGhB,MAAM,4B,GAX5FO,IAAMC,WCQZS,E,iLAPX,OAAO,yBAAKjB,MAAM,sBAAsBC,GAAG,iBACvC,qCACA,4D,GAJYM,IAAMC,WCSXU,E,iLAPX,OAAO,yBAAKlB,MAAM,sBAAsBC,GAAG,kBACvC,sCACA,4D,GAJaM,IAAMC,WCMZW,E,iLAJX,OAAO,yD,GAFYZ,IAAMC,WCSdY,E,iLAPX,OAAO,mCAEH,0C,GAJab,IAAMC,WCqBZa,MAbf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,kBCNcC,QACW,cAA7BtC,OAAOuC,SAASC,UAEe,UAA7BxC,OAAOuC,SAASC,UAEhBxC,OAAOuC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAQ,kBAAE,EAAF,MAAWzC,SAASI,eAAe,SDwH9C,kBAAmBsC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.90853a6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*----------------------------------------------------*/\n/* When the user scrolls down 20px from the top of the document, show the button\n/* When the user scrolls down 20px from the top of the document, slide down the navbar\n/*----------------------------------------------------*/\nwindow.onscroll = function() {\n    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n        document.getElementById(\"myBtn\").style.display = \"block\";\n        document.getElementById(\"navbar\").style.top = \"0\";\n    } else {\n        document.getElementById(\"myBtn\").style.display = \"none\";\n        document.getElementById(\"navbar\").style.top = \"-80px\";\n    }\n\n    var windowheight = window.scrollTop;\n    var sectionabout = document.getElementById(\"section-about\").offsetTop;\n\n    if (windowheight >= sectionabout) {\n        document.getElementById(\"navbar\").style.backgroundColor = \"#333\";\n    } else {\n        document.getElementById(\"navbar\").style.backgroundColor = \"transparent\";\n    }\n\n}\n\n/*----------------------------------------------------*/\n/* When the user clicks on the button, \n/* scroll to the top of the document\n/*----------------------------------------------------*/\nfunction topFunction() {\n    document.getElementById(\"navbar\").style.backgroundColor = \"#333\";\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n}","import React from 'react';\nimport { Link, animateScroll as scroll } from 'react-scroll';\n\nclass TopBar extends React.Component {\n  render() {\n    return <nav class=\"navbar navbar-expand-sm navbar-light\" id=\"navbar\">\n        {/*Brand*/}\n        {/* <a class=\"navbar-brand\" href=\"#\">Navbar</a> */}\n        <button class=\"btn\" onclick=\"topFunction()\" id=\"myBtn\">\n\t        <i class=\"far fa-arrow-alt-circle-up\"></i>\n\t    </button>\n        {/* Toggler/collapsibe Button */}\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        {/* Navbar links */}\n        <div class=\"collapse navbar-collapse justify-content-center\" id=\"collapsibleNavbar\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#section-header\">Link</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#section-about\">Link</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#section-resume\">Link</a>\n                </li>\n            </ul>\n        </div>\n    </nav>\n  }\n}\n\nexport default TopBar;\n","import React from 'react';\nimport HeaderData from '../data/header.json';\n\nclass Header extends React.Component {\n  render() {\n    return <section class=\"intro\" id=\"section-header\">\n        <div class=\"content-header\">\n            <div class=\"col-sm-12\">\n                <h1 id=\"name-header\">{HeaderData.name}</h1>\n                <p id=\"text-header\">{HeaderData.text}<b>{HeaderData.text2}</b>{HeaderData.text3}</p>\n                <ul class=\"social-icons\">\n                    <li><a href=\"https://www.linkedin.com/in/mgonzalezriojo/\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fa fa-linkedin\"></i></a></li>\n                    <li><a href=\"https://scholar.google.es/citations?user=Iow8x7EAAAAJ&hl=es&oi=ao\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"ai ai-google-scholar\"></i></a></li>\n                    <li><a href=\"https://github.com/lolognz\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fa fa-github\"></i></a></li>\n                    <li><a href=\"https://twitter.com/lolognz\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fa fa-twitter\"></i></a></li>\n                </ul>\n            </div>\n        </div>\n    </section>\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass About extends React.Component {\n  render() {\n    return <div class=\"section text-center\" id=\"section-about\">\n        <h1>about</h1>\n        <p>A website created by me.</p>\n    </div>\n  }\n}\n\nexport default About;\n","import React from 'react';\n\nclass Resume extends React.Component {\n  render() {\n    return <div class=\"section text-center\" id=\"section-resume\">\n        <h1>Resume</h1>\n        <p>A website created by me.</p>\n    </div>\n  }\n}\n\nexport default Resume;\n","import React from 'react';\n\nclass Projects extends React.Component {\n  render() {\n    return <div>This is the projects</div>;\n  }\n}\n\nexport default Projects;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return <jumbotron>\n    \t{/*<div class=\"jumbotron text-center\" style=\"margin-bottom:0\" id=\"footer\">*/}\n        <p>Footer</p>\n    </jumbotron>;\n  }\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Projects from './components/Projects';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar/>\n      <Header/>\n      <About/>\n      <Resume/>\n      <Projects/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/custom.css';\nimport './js/javascript.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App /> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}